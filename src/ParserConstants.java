public interface ParserConstants
{
	int START_SYMBOL = 39;

    int FIRST_NON_TERMINAL    = 39;
    int FIRST_SEMANTIC_ACTION = 70;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, 14, 14, 14, -1, 14, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1,  8,  9, 10, 11, -1, -1, -1, 13, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, 20, 18, 19, -1, 21, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 28, -1, -1, -1, -1, -1, 28, 28, -1, 28, 28, 28, -1, 28, 28, -1, 28, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 34, 34, 34, 34, 34, -1, -1, -1, 34, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, 34, -1, -1, -1, -1, 34, 34, -1, -1 },
        { -1, 32, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 38, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 42, 42, 42, 42, 42, -1, -1, -1, 42, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, -1, -1, -1, 42, -1, -1, -1, -1, 42, 42, -1, -1 },
        { -1, 46, 46, 46, 46, 46, -1, -1, -1, 48, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, 49, -1, -1, -1, -1, 46, 46, -1, -1 },
        { -1, 50, 50, 50, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, -1, 50, 50, -1, -1 },
        { -1, 57, 57, 57, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, -1, 57, 57, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 54, 55, 56, -1, -1, -1, -1 },
        { -1, 61, 61, 61, 61, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, -1, -1, -1, -1, -1, -1, -1, -1, 61, 61, -1, -1 },
        { -1, 65, 66, 67, 68, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, -1, 71, 72, -1, -1 },
        { -1, 43, -1, -1, -1, -1, -1, 43, 43, -1, 43, 43, 43, -1, 43, 43, -1, 43, -1, 43, 43, -1, -1, -1, -1, -1, 43, 44, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 58, -1, -1, -1, -1, -1, 58, 58, -1, 58, 58, 58, -1, 58, 58, -1, 58, -1, 58, 58, -1, -1, -1, -1, -1, 58, 58, 58, -1, 58, 58, 58, 58, 59, 60, -1, -1 },
        { -1, 62, -1, -1, -1, -1, -1, 62, 62, -1, 62, 62, 62, -1, 62, 62, -1, 62, -1, 62, 62, -1, -1, -1, -1, -1, 62, 62, 62, -1, 62, 62, 62, 62, 62, 62, 63, 64 },
        { -1, 51, -1, -1, -1, -1, -1, 51, 51, -1, 51, 51, 51, -1, 51, 51, -1, 51, -1, 51, 51, -1, -1, -1, -1, -1, 51, 51, 51, -1, 52, 52, 52, 52, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6,  7, -1, -1, -1, -1, -1, -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 16, -1, -1, -1, -1, -1, 15, 15, -1, 16, 16, 16, -1, 16, 16, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        {  85,   7,  17,  40,  18,  17,  41,  18,  86 },
        {  42,  19,  43,  91,  44 },
        {   0 },
        {   0 },
        {  42,  19,  43,  91,  44 },
        {   2,  95,  66 },
        {   0 },
        {  20,  42 },
        {   3 },
        {   4 },
        {   5 },
        {   6 },
        {  14 },
        {  10 },
        {  45,  67 },
        {   0 },
        {  41 },
        {  46 },
        {  47 },
        {  48 },
        {  49 },
        {  50 },
        {   2,  92,  68 },
        {  19,  55,  93,  51 },
        {  22,  55 },
        {  23,  55 },
        {  24,  55 },
        {  25,  55 },
        {   0 },
        {  21,  11,  55 },
        {  12,  26,  53,  42,  94,  27 },
        {   6,  87,  84,  20 },
        {   0 },
        {  13,  26,  52,  27 },
        {  55,  84,  69 },
        {   0 },
        {  20,  52 },
        {  11,  55,  96,  41,  54,   9,  98 },
        {  97,   8,  41 },
        {   0 },
        {  16,  99,  55, 100,  41,   9, 101 },
        {  15,  99,  55, 102,  41,   9, 101 },
        {  56,  62 },
        {   0 },
        {  28,  56,  88,  62 },
        {  29,  56,  89,  62 },
        {  57 },
        {  14,  81 },
        {  10,  82 },
        {  30,  56,  83 },
        {  58,  65 },
        {   0 },
        {  59,  79,  57,  80 },
        {  31 },
        {  32 },
        {  33 },
        {  34 },
        {  60,  63 },
        {   0 },
        {  35,  60,  71,  63 },
        {  36,  60,  72,  63 },
        {  61,  64 },
        {   0 },
        {  37,  61,  73,  64 },
        {  38,  61,  74,  64 },
        {   2, 103 },
        {   3,  75 },
        {   4,  76 },
        {   5,  90 },
        {   6,  87 },
        {  26,  55,  27 },
        {  35,  61,  77 },
        {  36,  61,  78 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "esperado EOF",
        "esperado id",
        "esperado cte_int",
        "esperado cte_float",
        "esperado cte_char",
        "esperado cte_str",
        "esperado def",
        "esperado else",
        "esperado end",
        "esperado false",
        "esperado if",
        "esperado input",
        "esperado output",
        "esperado true",
        "esperado until",
        "esperado while",
        "esperado \"{%\"",
        "esperado \"%}\"",
        "esperado \"=\"",
        "esperado \",\"",
        "esperado \":\"",
        "esperado \"+=\"",
        "esperado \"-=\"",
        "esperado \"*=\"",
        "esperado \"/=\"",
        "esperado \"(\"",
        "esperado \")\"",
        "esperado \"&\"",
        "esperado \"|\"",
        "esperado \"!\"",
        "esperado \"==\"",
        "esperado \"!=\"",
        "esperado \"<\"",
        "esperado \">\"",
        "esperado \"+\"",
        "esperado \"-\"",
        "esperado \"*\"",
        "esperado \"/\"",
        "esperado def",//<programa> inválido",
        "esperado id  %}",//"<declaracao_variavel> inválido",
        "esperado id  if  input  output  until  while",//"<lista_comandos> inválido",
        "esperado id",//"<lista_identificadores> inválido",
        "esperado constante",//"<valor> inválido",
        "esperado id  %}",//<declaracao_variavel_repete> inválido",
        "esperado id  if  input  output  until  while",//"<comando> inválido",
        "esperado id",//"<comando_atribuicao> inválido",
        "esperado input",//"<comando_entrada> inválido",
        "esperado output",//"<comando_saida> inválido",
        "esperado if",//"<comando_selecao> inválido",
        "esperado until  while",//"<comando_repeticao> inválido",
        "esperado else  end  if  input  output  until  while  %}  :",//"<sufixo> inválido",
        "esperado expressão",//"<lista_expressoes> inválido",
        "esperado id  cte_str",//"<opcional> inválido",
        "esperado else  end",//"<opcional_selecao> inválido",
        "esperado expressão",//"<expressao> inválido",
        "esperado expressão",//"<elemento> inválido",
        "esperado expressão",//"<relacional> inválido",
        "esperado expressão",//"<aritmetica> inválido",
        "esperado expressão",//"<operador_relacional> inválido",
        "esperado expressão",//"<termo> inválido",
        "esperado expressão",//"<fator> inválido",
        "esperado expressão",//"<expressao1> inválido",
        "esperado expressão",//"<aritmetica1> inválido",
        "esperado expressão",//"<termo1> inválido",
        "esperado expressão",//"<relacional1> inválido",
        "esperado =  ,  )",//"<lista_identificadores1> inválido",
        "esperado id  else  end  if  input  output  until  while",//"<lista_comandos1> inválido",
        "esperado =  +=  -=  *=  /=",//"<comando_atribuicao1> inválido",
        "esperado expressão",//"<lista_expressoes1> inválido"
    };
}

